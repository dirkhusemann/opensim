; Settings that control the exposure of data externally.


[DataSnapshot]
    ; The following set of configs pertains to search.
    ; Set index_sims to true to enable search engines to index your searchable data
    ; If false, no data will be exposed, DataSnapshot module will be off, and you can ignore the rest of these search-related configs
    ; default is false
    index_sims = false

    ; The variable data_exposure controls what the regions expose:
    ;    minimum: exposes only things explicitly marked for search
    ;    all: exposes everything
    data_exposure = minimum

    ; If search is on, change this to your grid name; will be ignored for standalones
    gridname = "OSGrid"

    ; Period between data snapshots, in seconds. 20 minutes, for starters, so that you see the initial changes fast.
    ; Later, you may want to increase this to 3600 (1 hour) or more
    default_snapshot_period = 1200

    ; This will be created in bin, if it doesn't exist already. It will hold the data snapshots.
    snapshot_cache_directory = "DataSnapshot"

    ; This semicolon-separated string serves to notify specific data services about the existence 
    ; of this sim. Uncomment if you want to index your data with this and/or other search providers.
    ;data_services="http://metaverseink.com/cgi-bin/register.py"


[GridInfo]
    ; These settings are used to return information on a get_grid_info call.
    ; Client launcher scripts and third-party clients make use of this to
    ; autoconfigure the client and to provide a nice user experience. If you
    ; want to facilitate that, you should configure the settings here according
    ; to your grid or standalone setup.
    ;
    ; See http://opensimulator.org/wiki/GridInfo

    ; login uri: for grid this is the user server URI
    login = http://127.0.0.1:9000/

    ; long grid name: the long name of your grid
    gridname = "the lost continent of hippo"

    ; short grid name: the short name of your grid
    gridnick = "hippogrid"

    ; login page: optional: if it exists it will be used to tell the client to use
    ;                       this as splash page
    ; currently unused
    ;welcome = http://127.0.0.1/welcome

    ; helper uri: optional: if it exists if will be used to tell the client to use
    ;                       this for all economy related things
    ; currently unused
    ;economy = http://127.0.0.1:9000/

    ; web page of grid: optional: page providing further information about your grid
    ; currently unused
    ;about = http://127.0.0.1/about/

    ; account creation: optional: page providing further information about obtaining
    ;                             a user account on your grid
    ; currently unused
    ;register = http://127.0.0.1/register

    ; help: optional: page providing further assistance for users of your grid
    ; currently unused
    ;help = http://127.0.0.1/help

    ; password help: optional: page providing password assistance for users of your grid
    ; currently unused
    ;password = http://127.0.0.1/password


; Uncomment the following for IRC bridge
; experimental, so if it breaks... keep both parts... yada yada
; also, not good error detection when it fails
;[IRC]
    ;enabled = true ; you need to set this otherwise it won't connect
    ;server  = name.of.irc.server.on.the.net
    ;; user password - only use this if the server requires one
    ;password = mypass
    ;nick    = OpenSimBotNameProbablyMakeThisShorter
    ;channel = #the_irc_channel_you_want_to_connect_to
    ;port = 6667
    ;; channel to listen for configuration commands
    ;commands_enabled = false
    ;command_channel = 2777
    ;report_clients = true
    ;; relay private chat connections
    ;; relay_private_channels = true: will relay IRC chat from/to private in-world channels
    ;; relay_private_channel_out -- channel to send messages out to the IRC bridge
    ;; relay_private_channel_in -- channel to receive message from the IRC bridge
    ;; relay_chat = false: IRC bridge will not relay normal chat
    ;; access_password -- simple security device
    ;;
    ;; so, to just relay chat from an IRC channel to in-world region and vice versa:
    ;;
    ;;     relay_private_channels = false
    ;;     relay_chat = true
    ;;
    ;; to relay chat only to/from private in-world channels:
    ;;
    ;;     relay_chat = false
    ;;     relay_private_channels = true
    ;;     relay_private_channel_in = 2226
    ;;     relay_private_channel_out = 2225
    ;;
    ;; in this example, all chat coming in from IRC will be send out via
    ;; in-world channel 2226, and all chat from in-world channel 2225 will
    ;; be relayed to the IRC channel.
    ;;
    ;relay_private_channels = false
    ;relay_private_channel_in = 2226
    ;relay_private_channel_out = 2225
    ;relay_chat = true
    ;access_password = foobar

    ;fallback_region = name of "default" region
    ;MSGformat fields : 0=botnick, 1=user, 2=region, 3=message
    ; must start with "PRIVMSG {0} : " or irc server will get upset
    ;for <bot>:<user in region> :<message>
    ;msgformat = "PRIVMSG {0} :<{1} in {2}>: {3}"
    ;for <bot>:<message> - <user of region> :
    msgformat = "PRIVMSG {0} : {3} - {1} of {2}"
    ;for <bot>:<message> - from <user> :
    ;msgformat = "PRIVMSG {0} : {3} - from {1}"


[RemoteAdmin]
    enabled = false
    access_password = unknown

    ; the create_region XmlRpc call uses region_file_template to generate
    ; the file name of newly create regions (if they are created
    ; persistent). the parameter available are:
    ;     {0} - X location
    ;     {1} - Y location
    ;     {2} - region UUID
    ;     {3} - region port
    ;     {4} - region name with " ", ":", "/" mapped to  "_"

    region_file_template = "{0}x{1}-{2}.xml"

    ; we can limit the number of regions that XmlRpcCreateRegion will
    ; allow by setting this to a positive, non-0 number: as long as the
    ; number of regions is below region_limits, XmlRpcCreateRegion will
    ; succeed. setting region_limit to 0 disables the check.
    ; default is 0
    ;region_limit = 0

    ; enable only those methods you deem to be appropriate using a | delimited whitelist
    ; for example, enabled_methods = admin_broadcast|admin_region_query|admin_save_oar|admin_save_xml    
    ; if this parameter is not specified but enabled = true, all methods will be available
    enabled_methods = all


[RestPlugins]
    ; Change this to true to enable REST Plugins. This must be true if you wish to use
    ; REST Region or REST Asset and Inventory Plugins
    enabled = false
    god_key = SECRET
    prefix = /admin


[RestRegionPlugin]
    ; Change this to true to enable the REST Region Plugin
    enabled = false


[RestHandler]
  ; Change this to true to enable the REST Asset and Inventory Plugin
  enabled = false
  authenticate=true
  secured=true
  extended-escape=true
  realm=OpenSim REST
  dump-asset=false
  path-fill=true
  dump-line-size=32
  flush-on-error=true
